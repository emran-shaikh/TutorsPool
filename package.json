{
  "name": "vite_react_shadcn_ts",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc && vite build",
    "build:production": "NODE_ENV=production tsc && vite build --mode production",
    "vercel-build": "npm run build:production",
    "build:vercel": "vite build --mode production",
    "server:dev": "tsx watch server/index.ts",
    "server:start": "node dist-server/index.js",
    "server:build": "tsc -p tsconfig.server.json",
    "dev:all": "concurrently \"npm:server:dev\" \"npm:dev\"",
    "build:dev": "vite build --mode development",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "type-check": "tsc --noEmit",
    "preview": "vite preview",
    "test": "vitest",
    "test:run": "vitest run",
    "test:coverage": "vitest run --coverage",
    "test:sprite": "testsprite",
    "test:all": "npm run test:sprite && npm run test:run",
    "start": "npm run build && npm run server:start",
    "production": "NODE_ENV=production npm run start",
    "security:check": "echo 'Checking for hardcoded secrets...' && node -e \"const fs=require('fs'); const files = fs.readdirSync('src').filter(f => f.endsWith('.ts') || f.endsWith('.tsx')); const hasSecrets = files.some(f => fs.readFileSync('src/'+f, 'utf8').match(/AIzaSy|sk_live|sk_test/)); if(hasSecrets) { console.error('❌ Found hardcoded secrets!'); process.exit(1); } else console.log('✅ No hardcoded secrets found');\"",
    "firebase:test": "tsx -e \"import('./server/services/firebaseService.js').then(({firebaseService}) => console.log('Firebase configured:', firebaseService.isConfigured()))\"",
    "deploy:check": "npm run type-check && npm run lint && npm run security:check",
    "deploy:build": "npm run deploy:check && npm run build:production",
    "deploy:vercel": "npm run deploy:check && vercel --prod"
  },
  "dependencies": {
    "@hookform/resolvers": "^3.9.1",
    "@prisma/client": "^6.2.0",
    "@radix-ui/react-alert-dialog": "^1.1.4",
    "@radix-ui/react-avatar": "^1.1.2",
    "@radix-ui/react-checkbox": "^1.1.3",
    "@radix-ui/react-dialog": "^1.1.4",
    "@radix-ui/react-dropdown-menu": "^2.1.4",
    "@radix-ui/react-label": "^2.1.1",
    "@radix-ui/react-navigation-menu": "^1.1.4",
    "@radix-ui/react-popover": "^1.1.4",
    "@radix-ui/react-progress": "^1.1.1",
    "@radix-ui/react-scroll-area": "^1.2.2",
    "@radix-ui/react-select": "^2.1.4",
    "@radix-ui/react-separator": "^1.1.1",
    "@radix-ui/react-slot": "^1.1.1",
    "@radix-ui/react-switch": "^1.1.2",
    "@radix-ui/react-tabs": "^1.1.2",
    "@radix-ui/react-toast": "^1.2.4",
    "@radix-ui/react-tooltip": "^1.1.6",
    "@stripe/react-stripe-js": "^3.1.1",
    "@stripe/stripe-js": "^5.7.0",
    "@supabase/supabase-js": "^2.49.2",
    "@tanstack/react-query": "^5.69.0",
    "@tanstack/react-query-devtools": "^5.69.0",
    "@vercel/analytics": "^1.4.1",
    "@vitejs/plugin-react-swc": "^3.11.0",
    "autoprefixer": "^10.4.20",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "date-fns": "^4.1.0",
    "embla-carousel-react": "^8.5.2",
    "firebase": "^11.1.0",
    "firebase-admin": "^13.1.1",
    "lucide-react": "^0.544.0",
    "next-themes": "^0.4.6",
    "postcss": "^8.5.0",
    "react": "^18.3.1",
    "react-day-picker": "^9.4.6",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.54.2",
    "react-icons": "^5.4.0",
    "react-router-dom": "^7.1.3",
    "recharts": "^2.15.0",
    "socket.io-client": "^4.8.1",
    "sonner": "^1.4.0",
    "tailwind-merge": "^2.6.0",
    "tailwindcss": "^3.4.17",
    "tailwindcss-animate": "^1.0.7",
    "terser": "^5.44.0",
    "typescript": "^5.9.3",
    "uuid": "^11.0.5",
    "vite": "^6.3.6",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "@eslint/js": "^10.0.0",
    "@testing-library/jest-dom": "^6.9.1",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/cors": "^2.8.17",
    "@types/express": "^5.0.1",
    "@types/node": "^22.13.5",
    "@types/react": "^18.3.11",
    "@types/react-dom": "^18.3.1",
    "@types/uuid": "^10.0.0",
    "@vercel/node": "^5.3.26",
    "@vitest/ui": "^1.6.0",
    "concurrently": "^9.1.2",
    "cors": "^2.8.5",
    "eslint": "^9.19.0",
    "eslint-plugin-react-hooks": "^5.1.0",
    "eslint-plugin-react-refresh": "^0.4.18",
    "express": "^4.21.2",
    "globals": "^15.15.0",
    "jsdom": "^26.0.0",
    "openai": "^4.77.3",
    "prisma": "^6.2.0",
    "socket.io": "^4.8.1",
    "stripe": "^17.6.0",
    "tsx": "^4.19.3",
    "typescript-eslint": "^8.23.0",
    "vitest": "^1.6.0"
  },
  "description": "This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.",
  "main": "ecosystem.config.js",
  "repository": {
    "type": "git",
    "url": "git@github.com-emran:emran-shaikh/TutorsPool.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}
